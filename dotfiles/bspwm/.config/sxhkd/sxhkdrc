#
# bspwm hotkeys
#

# # note a desktop
# alt + c
#     echo "$(bspc query -D -d)" > /tmp/bspwmdtop_swap
#
# # move the nodes of the noted desktop to the current desktop
# alt + v
#     for win in $(bspc query -N -d $(cat /tmp/bspwmdtop_swap)); do \
#         bspc node $win -d $(bspc query -D -d); \
#     done

alt + w
    bspc node -c

alt + t
    bspc desktop -l next
    # bspc desktop -l next && bspc node -f next

alt + b
    bspc node @/ -B

# set the window state
alt + {p,shift + p,s,f}
    bspc node -t "~"{tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
# pneumonic: keep node 'O'pen
super + ctrl + {x,y,z}
    bspc node -g {locked,sticky,private}

alt + {_,shift} + Tab
    bspc desktop -f {next,prev}

super + {_,shift} + Tab
    bspc node -f {next,prev}

alt + {comma,period}
    bspc node @/ -C {backward,forward}

alt + apostrophe
    bspc node -s last

alt + m
    bspc node -s biggest

alt + shift + {h,j,k,l}
    bspc config pointer_follows_focus true; \
    cur_win=$(bspc query -N -n); \
    cur_mon=$(bspc query -M -m); \
    dir={west,south,north,east}; \
    if ! bspc node -f $dir; then \
        bspc node -m ${dir}.!focused; \
        bspc monitor -f ${dir}.!focused; \
    else \
        new_mon=$(bspc query -M -m); \
        new_win=$(bspc query -N -n); \
        if [ $new_mon -eq $cur_mon ]; then \
            bspc node -s $cur_win; \
        else \
            bspc node $cur_win -n $new_win; \
        fi; \
        bspc node -f $cur_win; \
    fi; \
    bspc config pointer_follows_focus false

alt + {h,j,k,l}
    bspc config pointer_follows_monitor true; \
    bspc config pointer_follows_focus true; \
    dir={west,south,north,east}; \
    if ! bspc node -f ${dir}.!focused; then \
        bspc monitor -f ${dir}.!focused; \
    fi; \
    bspc config pointer_follows_monitor false; \
    bspc config pointer_follows_focus false

# Reshape tiled, pseudo_tiled, and floating windows
super + {l,h}
    $HOME/bin/window_move.sh {-p,-n} -x -s 20
super + {j,k}
    $HOME/bin/window_move.sh {-p,-n} -y -s 20

# Preselection controls

alt + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

alt + ctrl + space
    bspc node -p cancel

alt + ctrl + {1-9}
    bspc node -o 0.{1-9}

super + {p,b,comma,period}
  bspc node -f @{parent,brother,first,second}

# focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# These two keybinds determine index by list order of desktops from current monitor
alt + {1-9}
    D={1-9}; \
    bspc desktop -f "$(bspc query -D -m | sed -n "$D p")"

alt + shift + {1-9}
    D={1-9}; \
    bspc node -d "$(bspc query -D -m | sed -n "$D p")"

# alt + ctrl + {y,x}
#         bspc config -d focused node_gap $((`bspc config -d focused node_gap` {+,-} 10))

alt + ctrl + {y,x}
    gap=$(bspc config -m focused bottom_padding); \
    new_gap=$(($gap {+,-} 10)); \
    if [ $(bspc config -m focused top_padding) -eq $gap ]; then \
        bspc config top_padding new_gap; \
    else \
        bspc config top_padding $(($new_gap + 20)); \
    fi; \
    bspc config left_padding $new_gap; \
    bspc config right_padding $new_gap; \
    bspc config bottom_padding $new_gap

~button1
    bspc pointer -g focus

alt + button{1-3}
    bspc pointer -g {move,resize_side,resize_corner}

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
alt + y
    bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

alt + !button{1-3}
    bspc pointer -t %i %i

alt + @button{1-3}
    bspc pointer -u

# alt + d
#     bspc control --toggle-visibility

alt + {_,shift} + semicolon
    bspc node @/ -R {90,270}

# alt + g
#   [[ -f ~/.config/bspwm/!node_gap ]] && rm -f ~/.config/bspwm/!node_gap || touch ~/.config/bspwm/!node_gap; \
#     node_gap

#
# wm independent hotkeys
#

alt + o
    qutebrowser

alt + ctrl + o
    firefox

# alt + e
#     pcmanfm

alt + e
  urxvt -e zsh -c "emacsclient -nw -c --alternate-editor vim; zsh"

alt + ctrl + Return
    urxvt -hold -e zsh -i ~/bin/tsm

alt + Return
    urxvt

alt + space
    dmenu_run_custom

# alt + space
#     rofi_run

super + v
    dmenuclip_wrapper

super + c
    dmenu_calc

super + ctrl + p
    toggle.sh

XF86Audio{Prev,Next}
     mpc -q {prev,next}


XF86AudioPlay
     mpc -q toggle

XF86Audio{LowerVolume,RaiseVolume}
    amixer -q sset Master 3%{-,+}

XF86AudioMute
    amixer -q set Master toggle

XF86MonBrightnessUp
    xbacklight -inc 10

XF86MonBrightnessDown
    xbacklight -dec 10

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

super + alt + Escape
    killall panel && bspc quit
